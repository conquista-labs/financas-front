openapi: 3.0.0
paths:
  /pessoas:
    get:
      operationId: PessoasController_findAll
      parameters:
        - name: page
          required: false
          in: query
          description: Número da página
          schema:
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          description: Limite de itens por página
          schema:
            default: 10
            type: number
      responses:
        '200':
          description: Lista de pessoas retornada com dasdadasucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPessoasResponse'
      security:
        - access-token: []
      summary: Listar todas as pessoas
      tags:
        - Pessoas
    post:
      operationId: PessoasController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePessoaRequest'
      responses:
        '201':
          description: Pessoa criada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePessoaResponse'
      security:
        - access-token: []
      summary: Criar nova pessoa
      tags:
        - Pessoas
  /pessoas/{id}:
    get:
      operationId: PessoasController_findOne
      parameters:
        - name: id
          required: true
          in: path
          description: ID da pessoa
          schema:
            type: string
      responses:
        '200':
          description: Pessoa encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPessoaResponse'
        '404':
          description: Pessoa não encontrada.
      security:
        - access-token: []
      summary: Buscar pessoa por ID
      tags:
        - Pessoas
    patch:
      operationId: PessoasController_update
      parameters:
        - name: id
          required: true
          in: path
          description: ID da pessoa
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditPessoaRequest'
      responses:
        '200':
          description: Pessoa atualizada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditPessoaResponse'
        '404':
          description: Pessoa não encontrada.
      security:
        - access-token: []
      summary: Atualizar pessoa por ID
      tags:
        - Pessoas
    delete:
      operationId: PessoasController_remove
      parameters:
        - name: id
          required: true
          in: path
          description: ID da pessoa
          schema:
            type: string
      responses:
        '200':
          description: Pessoa removida com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePessoaResponse'
        '404':
          description: Pessoa não encontrada.
      security:
        - access-token: []
      summary: Remover pessoa por ID
      tags:
        - Pessoas
  /auth/register:
    post:
      operationId: AuthController_register
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Usuário registrado com sucesso
          content:
            application/json:
              schema:
                example:
                  message: Usuário registrado com sucesso
        '400':
          description: Email já cadastrado
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Email já cadastrado
                  error: Unauthorized
      summary: Registrar novo usuário
      tags:
        - Autenticação
  /auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Retorna token de acesso JWT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                example:
                  statusCode: 401
                  message: Credenciais inválidas
                  error: Unauthorized
      summary: Login com email e senha
      tags:
        - Autenticação
  /categorias:
    get:
      operationId: CategoriasController_findAll
      parameters:
        - name: page
          required: false
          in: query
          description: Número da página
          schema:
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          description: Limite de itens por página
          schema:
            default: 10
            type: number
      responses:
        '200':
          description: Lista de categorias retornada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCategoriasResponse'
      security:
        - access-token: []
      summary: Listar todas as categorias
      tags:
        - Categorias
    post:
      operationId: CategoriasController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoriaRequest'
      responses:
        '201':
          description: Categoria criada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCategoriaResponse'
      security:
        - access-token: []
      summary: Criar nova categoria
      tags:
        - Categorias
  /categorias/{id}:
    get:
      operationId: CategoriasController_findOne
      parameters:
        - name: id
          required: true
          in: path
          description: ID da categoria
          schema:
            type: string
      responses:
        '200':
          description: Categoria encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCategoriaResponse'
        '404':
          description: Categoria não encontrada.
      security:
        - access-token: []
      summary: Buscar categoria por ID
      tags:
        - Categorias
    patch:
      operationId: CategoriasController_update
      parameters:
        - name: id
          required: true
          in: path
          description: ID da categoria
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCategoriaRequest'
      responses:
        '200':
          description: Categoria atualizada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditCategoriaResponse'
        '404':
          description: Categoria não encontrada.
      security:
        - access-token: []
      summary: Atualizar categoria por ID
      tags:
        - Categorias
    delete:
      operationId: CategoriasController_remove
      parameters:
        - name: id
          required: true
          in: path
          description: ID da categoria
          schema:
            type: string
      responses:
        '200':
          description: Categoria removida com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCategoriaResponse'
        '404':
          description: Categoria não encontrada.
      security:
        - access-token: []
      summary: Remover categoria por ID
      tags:
        - Categorias
  /meios-pagamento:
    get:
      operationId: MeiosPagamentoController_findAll
      parameters:
        - name: page
          required: false
          in: query
          description: Número da página
          schema:
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          description: Limite de itens por página
          schema:
            default: 10
            type: number
      responses:
        '200':
          description: Lista de meios de pagamento retornada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMeiosPagamentosResponse'
      security:
        - access-token: []
      summary: Listar todas os meios de pagamento
      tags:
        - Meios de pagamento
    post:
      operationId: MeiosPagamentoController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeioPagamentoRequest'
      responses:
        '201':
          description: Meio de pagemento criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMeioPagamentoResponse'
      security:
        - access-token: []
      summary: Criar novo meio de pagemento
      tags:
        - Meios de pagamento
  /meios-pagamento/{id}:
    get:
      operationId: MeiosPagamentoController_findOne
      parameters:
        - name: id
          required: true
          in: path
          description: ID do meio de pagemento
          schema:
            type: string
      responses:
        '200':
          description: Meio de pagemento encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMeioPagamentoResponse'
        '404':
          description: Meio de pagemento não encontrado.
      security:
        - access-token: []
      summary: Buscar meio de pagamento por ID
      tags:
        - Meios de pagamento
    patch:
      operationId: MeiosPagamentoController_update
      parameters:
        - name: id
          required: true
          in: path
          description: ID do meio de pagemento
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMeioPagamentoRequest'
      responses:
        '200':
          description: Meio de pagemento atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditMeioPagamentoResponse'
        '404':
          description: Meio de pagemento não encontrada.
      security:
        - access-token: []
      summary: Atualizar meio de pagemento por ID
      tags:
        - Meios de pagamento
    delete:
      operationId: MeiosPagamentoController_remove
      parameters:
        - name: id
          required: true
          in: path
          description: ID do meio de pagemento
          schema:
            type: string
      responses:
        '200':
          description: Meio de pagemento removido com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMeioPagamentoResponse'
        '404':
          description: Meio de pagemento não encontrada.
      security:
        - access-token: []
      summary: Remover meio de pagemento por ID
      tags:
        - Meios de pagamento
  /enums:
    get:
      operationId: EnumsController_getEnums
      parameters: []
      responses:
        '200':
          description: Enums retornados com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumsResponse'
      summary: Lista todos os enums utilizados nos selects do sistema
      tags:
        - Enums
  /transacoes:
    get:
      operationId: TransacoesController_findAll
      parameters:
        - name: page
          required: false
          in: query
          description: Número da página
          schema:
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          description: Limite de itens por página
          schema:
            default: 10
            type: number
        - name: search
          required: false
          in: query
          description: Texto usado para filtrar as transações
          schema:
            example: IPTU
            type: string
        - name: startDate
          required: false
          in: query
          description: Data inicial usada para filtrar o mês das transações
          schema:
            example: '2025-07-21T15:03:42.000Z'
            type: string
        - name: endDate
          required: false
          in: query
          description: Data final usada para filtrar o mês das transações
          schema:
            example: '2025-07-21T15:03:42.000Z'
            type: string
        - name: categoriaId
          required: false
          in: query
          description: ID da categoria usada para filtrar as transações
          schema:
            type: string
        - name: pessoaId
          required: false
          in: query
          description: ID da pessoa usada para filtrar as transações
          schema:
            type: string
        - name: meioPagamentoId
          required: false
          in: query
          description: ID do meio de pagamento usado para filtrar as transações
          schema:
            type: string
        - name: formaPagamento
          required: false
          in: query
          description: Forma de pagamento usada para filtrar as transações
          schema:
            type: string
        - name: tipo
          required: false
          in: query
          description: Tipo despesa ou receita usado para filtrar as transações
          schema:
            type: string
      responses:
        '200':
          description: Lista de transações retornada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransacoesResponse'
      security:
        - access-token: []
      summary: Listar todas as transações
      tags:
        - Transações
    post:
      operationId: TransacoesController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransacaoRequest'
      responses:
        '201':
          description: Transação criada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransacaoResponse'
      security:
        - access-token: []
      summary: Criar nova transação
      tags:
        - Transações
  /transacoes/{id}:
    get:
      operationId: TransacoesController_findOne
      parameters:
        - name: id
          required: true
          in: path
          description: ID da transação
          schema:
            type: string
      responses:
        '200':
          description: Transação encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransacaoResponse'
        '404':
          description: Categoria não encontrada.
      security:
        - access-token: []
      summary: Buscar transação por ID
      tags:
        - Transações
    patch:
      operationId: TransacoesController_update
      parameters:
        - name: id
          required: true
          in: path
          description: ID da transação
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditTransacaoRequest'
      responses:
        '200':
          description: Transação atualizada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditTransacaoResponse'
        '404':
          description: Categoria não encontrada.
      security:
        - access-token: []
      summary: Atualizar transação por ID
      tags:
        - Transações
    delete:
      operationId: TransacoesController_remove
      parameters:
        - name: id
          required: true
          in: path
          description: ID da transação
          schema:
            type: string
      responses:
        '200':
          description: Transação removida com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTransacaoResponse'
        '404':
          description: Transação não encontrada.
      security:
        - access-token: []
      summary: Remover transação por ID
      tags:
        - Transações
  /resumo-financeiro:
    get:
      operationId: ResumoFinanceiroController_findAll
      parameters:
        - name: ano
          required: true
          in: query
          description: Ano usado para filtrar o resumo
          schema:
            example: '2025'
            type: string
      responses:
        '200':
          description: Resumo financeiro retornado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResumoFinanceiroResponse'
      security:
        - access-token: []
      summary: Listar resumo financeiro
      tags:
        - Resumo Financeiro
  /resumo-financeiro/{ano}:
    post:
      operationId: ResumoFinanceiroController_calculateResume
      parameters:
        - name: ano
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Calcular do resumo financeiro realizado com sucesso.
      security:
        - access-token: []
      summary: Calcular resumo financeiro
      tags:
        - Resumo Financeiro
  /relatorios/transacoes:
    get:
      operationId: RelatoriosController_gerarRelatorioTransacoes
      parameters:
        - name: search
          required: false
          in: query
          description: Texto usado para filtrar as transações
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: Data inicial usada para filtrar o mês das transações
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: Data final usada para filtrar o mês das transações
          schema:
            type: string
        - name: categoriaId
          required: false
          in: query
          description: ID da categoria usada para filtrar as transações
          schema:
            type: string
        - name: pessoaId
          required: false
          in: query
          description: ID da pessoa usada para filtrar as transações
          schema:
            type: string
        - name: meioPagamentoId
          required: false
          in: query
          description: ID do meio de pagamento usado para filtrar as transações
          schema:
            type: string
        - name: formaPagamento
          required: false
          in: query
          description: Forma de pagamento usada para filtrar as transações
          schema:
            type: string
      responses:
        '200':
          description: Relatório gerado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelatorioTransacoesResponse'
      security:
        - access-token: []
      summary: Gerar relatório finaceiro
      tags:
        - Relatórios
info:
  title: API de finanças M&J
  description: API de controle financeiro do Júnior e da Vivi
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    access-token:
      scheme: bearer
      bearerFormat: JWT
      type: http
      in: header
  schemas:
    PaginationMeta:
      type: object
      properties:
        page:
          type: number
          example: 1
          description: Página atual
        perPage:
          type: number
          example: 10
          description: Limite de itens por página
        total:
          type: number
          example: 100
          description: Total de itens encontrados
        lastPage:
          type: number
          example: 10
      required:
        - page
        - perPage
        - total
        - lastPage
    Pessoa:
      type: object
      properties:
        id:
          type: string
          example: uuid-gerado
        nome:
          type: string
          example: Vivi
        email:
          type: string
          example: vivi@email.com
        createdAt:
          format: date-time
          type: string
          example: '2025-07-14T12:34:56Z'
      required:
        - id
        - nome
        - email
        - createdAt
    PessoaPaginatedData:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginationMeta'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Pessoa'
      required:
        - meta
        - rows
    GetPessoasResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/PessoaPaginatedData'
      required:
        - message
        - data
    GetPessoaResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Pessoa'
      required:
        - message
        - data
    CreatePessoaRequest:
      type: object
      properties:
        nome:
          type: string
          description: Nome da pessoa
        ativo:
          type: boolean
          description: Status da pessoa
        email:
          type: string
          description: Email da pessoa
      required:
        - nome
    CreatePessoaResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Pessoa'
      required:
        - message
        - data
    EditPessoaRequest:
      type: object
      properties:
        nome:
          type: string
          description: Nome da pessoa
        ativo:
          type: boolean
          description: Status da pessoa
        email:
          type: string
          description: Email da pessoa
    EditPessoaResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Pessoa'
      required:
        - message
        - data
    DeletePessoaResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Pessoa'
      required:
        - message
        - data
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          example: vivi@email.com
        password:
          type: string
          example: '123456'
        nome:
          type: string
          example: Vivi
      required:
        - email
        - password
        - nome
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          example: conquista.engcomp@gmail.com
        password:
          type: string
          example: '123456'
      required:
        - email
        - password
    Auth:
      type: object
      properties:
        access_token:
          type: string
          example: jwt.token
        email:
          type: string
          example: vivi@email.com
        nome:
          type: string
          example: Vivi
      required:
        - access_token
        - email
        - nome
    LoginResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Auth'
      required:
        - message
        - data
    Categoria:
      type: object
      properties:
        id:
          type: string
          example: uuid-gerado
        nome:
          type: string
          example: Alimentação
        tipo:
          type: string
          enum:
            - despesa
            - receita
          example: despesa
        icone:
          type: string
          example: utensils
        tetoGasto:
          type: number
          example: 3500.5
        cor:
          type: string
          example: '#FF5733'
        createdAt:
          format: date-time
          type: string
          example: '2025-07-17T10:20:30.000Z'
      required:
        - id
        - nome
        - tipo
        - icone
        - tetoGasto
        - cor
        - createdAt
    CategoriaPaginatedData:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginationMeta'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Categoria'
      required:
        - meta
        - rows
    GetCategoriasResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/CategoriaPaginatedData'
      required:
        - message
        - data
    GetCategoriaResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Categoria'
      required:
        - message
        - data
    CreateCategoriaRequest:
      type: object
      properties:
        nome:
          type: string
          description: Nome da categoria
        tipo:
          type: string
          enum:
            - despesa
            - receita
          description: Tipo da categoria (despesa ou receita)
        icone:
          type: string
          description: Ícone da categoria
        tetoGasto:
          type: number
          example: 3500.5
          description: Teto de gasto da categoria
        cor:
          type: string
          description: Cor da categoria em hexadecimal
      required:
        - nome
        - tipo
    CreateCategoriaResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Categoria'
      required:
        - message
        - data
    EditCategoriaRequest:
      type: object
      properties:
        nome:
          type: string
          description: Nome da categoria
        tipo:
          type: string
          enum:
            - despesa
            - receita
          description: Tipo da categoria (despesa ou receita)
        icone:
          type: string
          description: Ícone da categoria
        tetoGasto:
          type: number
          example: 3500.5
          description: Teto de gasto da categoria
        cor:
          type: string
          description: Cor da categoria em hexadecimal
    EditCategoriaResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Categoria'
      required:
        - message
        - data
    DeleteCategoriaResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Categoria'
      required:
        - message
        - data
    MeioPagamento:
      type: object
      properties:
        id:
          type: string
          example: uuid-gerado
        nome:
          type: string
          example: Cartão crédito xp
        createdAt:
          format: date-time
          type: string
          example: '2025-07-17T10:20:30.000Z'
      required:
        - id
        - nome
        - createdAt
    MeioPagamentoPaginatedData:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginationMeta'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/MeioPagamento'
      required:
        - meta
        - rows
    GetMeiosPagamentosResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/MeioPagamentoPaginatedData'
      required:
        - message
        - data
    GetMeioPagamentoResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/MeioPagamento'
      required:
        - message
        - data
    CreateMeioPagamentoRequest:
      type: object
      properties:
        nome:
          type: string
          description: Nome do meio de pagamento
      required:
        - nome
    CreateMeioPagamentoResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/MeioPagamento'
      required:
        - message
        - data
    EditMeioPagamentoRequest:
      type: object
      properties:
        nome:
          type: string
          description: Nome do meio de pagamento
    EditMeioPagamentoResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/MeioPagamento'
      required:
        - message
        - data
    DeleteMeioPagamentoResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/MeioPagamento'
      required:
        - message
        - data
    EnumOption:
      type: object
      properties:
        value:
          type: string
          example: receita
          description: Valor da opção (para envio ao backend)
        label:
          type: string
          example: Receita
          description: Texto amigável para exibição
      required:
        - value
        - label
    Enums:
      type: object
      properties:
        tipoCategoria:
          type: array
          items:
            $ref: '#/components/schemas/EnumOption'
        tipoTransacao:
          type: array
          items:
            $ref: '#/components/schemas/EnumOption'
        tipoPatrimonio:
          type: array
          items:
            $ref: '#/components/schemas/EnumOption'
        formaPagamento:
          type: array
          items:
            $ref: '#/components/schemas/EnumOption'
      required:
        - tipoCategoria
        - tipoTransacao
        - tipoPatrimonio
        - formaPagamento
    EnumsResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Enums'
      required:
        - message
        - data
    TransacaoResponse:
      type: object
      properties:
        id:
          type: string
          example: uuid-gerado
        descricao:
          type: string
          example: Salário de Julho
        categoriaId:
          type: string
          format: uuid
        pessoaId:
          type: string
          format: uuid
        valor:
          type: number
          example: 3500.5
        data:
          type: string
          example: '2025-07-21T12:00:00Z'
        observacoes:
          type: string
          example: Pagamento referente ao mês de julho
        meioPagamentoId:
          type: string
          format: uuid
        formaPagamento:
          type: string
          enum:
            - avista
            - parcela1x
            - parcela2x
            - parcela3x
            - parcela4x
            - parcela5x
            - parcela6x
            - parcela7x
            - parcela8x
            - parcela9x
            - parcela10x
            - parcela11x
            - parcela12x
          example: parcela3x
        createdAt:
          format: date-time
          type: string
          example: '2025-07-17T10:20:30.000Z'
        categoria:
          $ref: '#/components/schemas/Categoria'
        pessoa:
          $ref: '#/components/schemas/Pessoa'
        meioPagamento:
          $ref: '#/components/schemas/MeioPagamento'
      required:
        - id
        - descricao
        - categoriaId
        - pessoaId
        - valor
        - data
        - createdAt
        - categoria
        - pessoa
        - meioPagamento
    TransacoesResume:
      type: object
      properties:
        total:
          type: number
          example: R$ 10
      required:
        - total
    TransacaoPaginatedData:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginationMeta'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/TransacaoResponse'
        resume:
          $ref: '#/components/schemas/TransacoesResume'
      required:
        - meta
        - rows
        - resume
    GetTransacoesResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/TransacaoPaginatedData'
      required:
        - message
        - data
    Transacao:
      type: object
      properties:
        id:
          type: string
          example: uuid-gerado
        descricao:
          type: string
          example: Salário de Julho
        categoriaId:
          type: string
          format: uuid
        pessoaId:
          type: string
          format: uuid
        valor:
          type: number
          example: 3500.5
        data:
          type: string
          example: '2025-07-21T12:00:00Z'
        observacoes:
          type: string
          example: Pagamento referente ao mês de julho
        meioPagamentoId:
          type: string
          format: uuid
        formaPagamento:
          type: string
          enum:
            - avista
            - parcela1x
            - parcela2x
            - parcela3x
            - parcela4x
            - parcela5x
            - parcela6x
            - parcela7x
            - parcela8x
            - parcela9x
            - parcela10x
            - parcela11x
            - parcela12x
          example: parcela3x
        createdAt:
          format: date-time
          type: string
          example: '2025-07-17T10:20:30.000Z'
      required:
        - id
        - descricao
        - categoriaId
        - pessoaId
        - valor
        - data
        - createdAt
    GetTransacaoResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Transacao'
      required:
        - message
        - data
    CreateTransacaoRequest:
      type: object
      properties:
        id:
          type: string
          example: uuid-gerado
        descricao:
          type: string
          example: Salário de Julho
        categoriaId:
          type: string
          format: uuid
        pessoaId:
          type: string
          format: uuid
        valor:
          type: number
          example: 3500.5
        data:
          type: string
          example: '2025-07-21T12:00:00Z'
        formaPagamento:
          type: string
          enum:
            - avista
            - parcela1x
            - parcela2x
            - parcela3x
            - parcela4x
            - parcela5x
            - parcela6x
            - parcela7x
            - parcela8x
            - parcela9x
            - parcela10x
            - parcela11x
            - parcela12x
          example: parcela3x
        observacoes:
          type: string
          example: Pagamento referente ao mês de julho
        meioPagamentoId:
          type: string
          format: uuid
      required:
        - id
        - descricao
        - categoriaId
        - pessoaId
        - valor
        - data
    CreateTransacaoResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Transacao'
      required:
        - message
        - data
    EditTransacaoRequest:
      type: object
      properties:
        id:
          type: string
          example: uuid-gerado
        descricao:
          type: string
          example: Salário de Julho
        categoriaId:
          type: string
          format: uuid
        pessoaId:
          type: string
          format: uuid
        valor:
          type: number
          example: 3500.5
        data:
          type: string
          example: '2025-07-21T12:00:00Z'
        formaPagamento:
          type: string
          enum:
            - avista
            - parcela1x
            - parcela2x
            - parcela3x
            - parcela4x
            - parcela5x
            - parcela6x
            - parcela7x
            - parcela8x
            - parcela9x
            - parcela10x
            - parcela11x
            - parcela12x
          example: parcela3x
        observacoes:
          type: string
          example: Pagamento referente ao mês de julho
        meioPagamentoId:
          type: string
          format: uuid
    EditTransacaoResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Transacao'
      required:
        - message
        - data
    DeleteTransacaoResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/Transacao'
      required:
        - message
        - data
    ReceitaPorMes:
      type: object
      properties:
        mes:
          type: string
          example: 2025-01
        valor:
          type: number
          example: 3500
      required:
        - mes
        - valor
    DespesaPorMes:
      type: object
      properties:
        mes:
          type: string
          example: 2025-01
        valor:
          type: number
          example: 2500
      required:
        - mes
        - valor
    DespesaPorCategoriaAno:
      type: object
      properties:
        categoria:
          type: string
          example: Alimentação
        valor:
          type: number
          example: 2300
        cor:
          type: string
          example: '#FFF'
        tetoGasto:
          type: number
          example: 2300
      required:
        - categoria
        - valor
        - cor
    DespesaPorCategoriaMesCategoria:
      type: object
      properties:
        categoria:
          type: string
          example: Alimentação
        valor:
          type: number
          example: 800
        cor:
          type: string
          example: '#FFF'
        tetoGasto:
          type: number
          example: 2300
      required:
        - categoria
        - valor
        - cor
    DespesaPorCategoriaMes:
      type: object
      properties:
        mes:
          type: string
          example: 2025-01
        categorias:
          type: array
          items:
            $ref: '#/components/schemas/DespesaPorCategoriaMesCategoria'
      required:
        - mes
        - categorias
    GetResumoFinanceiro:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: ID do resumo financeiro
        receitasAno:
          type: number
          example: 12450.75
        despesasAno:
          type: number
          example: 8930.1
        saldoAno:
          type: number
          example: 3520.65
        patrimonio:
          type: number
          example: 54000
        receitasMes:
          type: array
          items:
            $ref: '#/components/schemas/ReceitaPorMes'
        despesasMes:
          type: array
          items:
            $ref: '#/components/schemas/DespesaPorMes'
        despesasPorCategoriaAno:
          type: array
          items:
            $ref: '#/components/schemas/DespesaPorCategoriaAno'
        despesasPorCategoriaMes:
          type: array
          items:
            $ref: '#/components/schemas/DespesaPorCategoriaMes'
        atualizadoEm:
          type: string
          example: '2025-07-21T16:35:00.000Z'
          description: Data da última atualização
      required:
        - id
        - receitasAno
        - despesasAno
        - saldoAno
        - patrimonio
        - receitasMes
        - despesasMes
        - despesasPorCategoriaAno
        - despesasPorCategoriaMes
        - atualizadoEm
    GetResumoFinanceiroResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/GetResumoFinanceiro'
      required:
        - message
        - data
    RelatorioTransacoesResponse:
      type: object
      properties:
        id:
          type: string
          example: uuid-gerado
        descricao:
          type: string
          example: Salário de Julho
        categoriaId:
          type: string
          format: uuid
        pessoaId:
          type: string
          format: uuid
        valor:
          type: number
          example: 3500.5
        data:
          type: string
          example: '2025-07-21T12:00:00Z'
        observacoes:
          type: string
          example: Pagamento referente ao mês de julho
        meioPagamentoId:
          type: string
          format: uuid
        formaPagamento:
          type: string
          enum:
            - avista
            - parcela1x
            - parcela2x
            - parcela3x
            - parcela4x
            - parcela5x
            - parcela6x
            - parcela7x
            - parcela8x
            - parcela9x
            - parcela10x
            - parcela11x
            - parcela12x
          example: parcela3x
        createdAt:
          format: date-time
          type: string
          example: '2025-07-17T10:20:30.000Z'
        categoria:
          $ref: '#/components/schemas/Categoria'
        pessoa:
          $ref: '#/components/schemas/Pessoa'
        meioPagamento:
          $ref: '#/components/schemas/MeioPagamento'
      required:
        - id
        - descricao
        - categoriaId
        - pessoaId
        - valor
        - data
        - createdAt
        - categoria
        - pessoa
        - meioPagamento
    RelatorioTrasacoesPaginatedData:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginationMeta'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/RelatorioTransacoesResponse'
        resume:
          $ref: '#/components/schemas/TransacoesResume'
      required:
        - meta
        - rows
        - resume
    GetRelatorioTransacoesResponse:
      type: object
      properties:
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          $ref: '#/components/schemas/RelatorioTrasacoesPaginatedData'
      required:
        - message
        - data
