{
  "openapi": "3.0.0",
  "paths": {
    "/pessoas": {
      "get": {
        "operationId": "PessoasController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de itens por página",
            "schema": {
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pessoas retornada com dasdadasucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPessoasResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Listar todas as pessoas",
        "tags": [
          "Pessoas"
        ]
      },
      "post": {
        "operationId": "PessoasController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePessoaRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pessoa criada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePessoaResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Criar nova pessoa",
        "tags": [
          "Pessoas"
        ]
      }
    },
    "/pessoas/{id}": {
      "get": {
        "operationId": "PessoasController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da pessoa",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pessoa encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPessoaResponse"
                }
              }
            }
          },
          "404": {
            "description": "Pessoa não encontrada."
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Buscar pessoa por ID",
        "tags": [
          "Pessoas"
        ]
      },
      "patch": {
        "operationId": "PessoasController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da pessoa",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPessoaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pessoa atualizada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditPessoaResponse"
                }
              }
            }
          },
          "404": {
            "description": "Pessoa não encontrada."
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Atualizar pessoa por ID",
        "tags": [
          "Pessoas"
        ]
      },
      "delete": {
        "operationId": "PessoasController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da pessoa",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pessoa removida com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePessoaResponse"
                }
              }
            }
          },
          "404": {
            "description": "Pessoa não encontrada."
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Remover pessoa por ID",
        "tags": [
          "Pessoas"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário registrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "Usuário registrado com sucesso"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email já cadastrado",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 401,
                    "message": "Email já cadastrado",
                    "error": "Unauthorized"
                  }
                }
              }
            }
          }
        },
        "summary": "Registrar novo usuário",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna token de acesso JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inválidas",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 401,
                    "message": "Credenciais inválidas",
                    "error": "Unauthorized"
                  }
                }
              }
            }
          }
        },
        "summary": "Login com email e senha",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/categorias": {
      "get": {
        "operationId": "CategoriasController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de itens por página",
            "schema": {
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de categorias retornada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoriasResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Listar todas as categorias",
        "tags": [
          "Categorias"
        ]
      },
      "post": {
        "operationId": "CategoriasController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoriaRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Categoria criada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCategoriaResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Criar nova categoria",
        "tags": [
          "Categorias"
        ]
      }
    },
    "/categorias/{id}": {
      "get": {
        "operationId": "CategoriasController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da categoria",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categoria encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoriaResponse"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrada."
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Buscar categoria por ID",
        "tags": [
          "Categorias"
        ]
      },
      "patch": {
        "operationId": "CategoriasController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da categoria",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCategoriaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Categoria atualizada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditCategoriaResponse"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrada."
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Atualizar categoria por ID",
        "tags": [
          "Categorias"
        ]
      },
      "delete": {
        "operationId": "CategoriasController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da categoria",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categoria removida com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCategoriaResponse"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrada."
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Remover categoria por ID",
        "tags": [
          "Categorias"
        ]
      }
    },
    "/meios-pagamento": {
      "get": {
        "operationId": "MeiosPagamentoController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de itens por página",
            "schema": {
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de meios de pagamento retornada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMeiosPagamentosResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Listar todas os meios de pagamento",
        "tags": [
          "Meios de pagamento"
        ]
      },
      "post": {
        "operationId": "MeiosPagamentoController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMeioPagamentoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Meio de pagemento criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMeioPagamentoResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Criar novo meio de pagemento",
        "tags": [
          "Meios de pagamento"
        ]
      }
    },
    "/meios-pagamento/{id}": {
      "get": {
        "operationId": "MeiosPagamentoController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do meio de pagemento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Meio de pagemento encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMeioPagamentoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Meio de pagemento não encontrado."
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Buscar meio de pagamento por ID",
        "tags": [
          "Meios de pagamento"
        ]
      },
      "patch": {
        "operationId": "MeiosPagamentoController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do meio de pagemento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditMeioPagamentoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Meio de pagemento atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditMeioPagamentoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Meio de pagemento não encontrada."
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Atualizar meio de pagemento por ID",
        "tags": [
          "Meios de pagamento"
        ]
      },
      "delete": {
        "operationId": "MeiosPagamentoController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do meio de pagemento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Meio de pagemento removido com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteMeioPagamentoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Meio de pagemento não encontrada."
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Remover meio de pagemento por ID",
        "tags": [
          "Meios de pagamento"
        ]
      }
    },
    "/enums": {
      "get": {
        "operationId": "EnumsController_getEnums",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Enums retornados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnumsResponse"
                }
              }
            }
          }
        },
        "summary": "Lista todos os enums utilizados nos selects do sistema",
        "tags": [
          "Enums"
        ]
      }
    },
    "/transacoes": {
      "get": {
        "operationId": "TransacoesController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de itens por página",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Texto usado para filtrar as transações",
            "schema": {
              "example": "IPTU",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Data inicial usada para filtrar o mês das transações",
            "schema": {
              "example": "2025-07-21T15:03:42.000Z",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Data final usada para filtrar o mês das transações",
            "schema": {
              "example": "2025-07-21T15:03:42.000Z",
              "type": "string"
            }
          },
          {
            "name": "categoriaId",
            "required": false,
            "in": "query",
            "description": "ID da categoria usada para filtrar as transações",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pessoaId",
            "required": false,
            "in": "query",
            "description": "ID da pessoa usada para filtrar as transações",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "meioPagamentoId",
            "required": false,
            "in": "query",
            "description": "ID do meio de pagamento usado para filtrar as transações",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formaPagamento",
            "required": false,
            "in": "query",
            "description": "Forma de pagamento usada para filtrar as transações",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tipo",
            "required": false,
            "in": "query",
            "description": "Tipo despesa ou receita usado para filtrar as transações",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de transações retornada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransacoesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Listar todas as transações",
        "tags": [
          "Transações"
        ]
      },
      "post": {
        "operationId": "TransacoesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransacaoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transação criada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransacaoResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Criar nova transação",
        "tags": [
          "Transações"
        ]
      }
    },
    "/transacoes/calendario": {
      "get": {
        "operationId": "TransacoesController_getCalendario",
        "parameters": [
          {
            "name": "ano",
            "required": true,
            "in": "query",
            "description": "Ano do calendário",
            "schema": {
              "example": 2025,
              "type": "number"
            }
          },
          {
            "name": "mes",
            "required": true,
            "in": "query",
            "description": "Mês do calendário (1-12)",
            "schema": {
              "minimum": 1,
              "maximum": 12,
              "example": 9,
              "type": "number"
            }
          },
          {
            "name": "categoriaId",
            "required": false,
            "in": "query",
            "description": "ID da categoria para filtrar",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pessoaId",
            "required": false,
            "in": "query",
            "description": "ID da pessoa para filtrar",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "meioPagamentoId",
            "required": false,
            "in": "query",
            "description": "ID do meio de pagamento para filtrar",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tipo",
            "required": false,
            "in": "query",
            "description": "Filtrar por tipo de transação",
            "schema": {
              "type": "string",
              "enum": [
                "receita",
                "despesa"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados do calendário retornados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCalendarioResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Obter dados formatados para calendário",
        "tags": [
          "Transações"
        ]
      }
    },
    "/transacoes/{id}": {
      "get": {
        "operationId": "TransacoesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da transação",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transação encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransacaoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrada."
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Buscar transação por ID",
        "tags": [
          "Transações"
        ]
      },
      "patch": {
        "operationId": "TransacoesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da transação",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditTransacaoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transação atualizada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditTransacaoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrada."
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Atualizar transação por ID",
        "tags": [
          "Transações"
        ]
      },
      "delete": {
        "operationId": "TransacoesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da transação",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transação removida com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTransacaoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Transação não encontrada."
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Remover transação por ID",
        "tags": [
          "Transações"
        ]
      }
    },
    "/resumo-financeiro": {
      "get": {
        "operationId": "ResumoFinanceiroController_findAll",
        "parameters": [
          {
            "name": "ano",
            "required": true,
            "in": "query",
            "description": "Ano usado para filtrar o resumo",
            "schema": {
              "example": "2025",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resumo financeiro retornado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetResumoFinanceiroResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Listar resumo financeiro",
        "tags": [
          "Resumo Financeiro"
        ]
      }
    },
    "/resumo-financeiro/{ano}": {
      "post": {
        "operationId": "ResumoFinanceiroController_calculateResume",
        "parameters": [
          {
            "name": "ano",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calcular do resumo financeiro realizado com sucesso."
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Calcular resumo financeiro",
        "tags": [
          "Resumo Financeiro"
        ]
      }
    },
    "/relatorios/transacoes": {
      "get": {
        "operationId": "RelatoriosController_gerarRelatorioTransacoes",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Texto usado para filtrar as transações",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Data inicial usada para filtrar o mês das transações",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Data final usada para filtrar o mês das transações",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoriaId",
            "required": false,
            "in": "query",
            "description": "ID da categoria usada para filtrar as transações",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pessoaId",
            "required": false,
            "in": "query",
            "description": "ID da pessoa usada para filtrar as transações",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "meioPagamentoId",
            "required": false,
            "in": "query",
            "description": "ID do meio de pagamento usado para filtrar as transações",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formaPagamento",
            "required": false,
            "in": "query",
            "description": "Forma de pagamento usada para filtrar as transações",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Relatório gerado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRelatorioTransacoesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Gerar relatório finaceiro",
        "tags": [
          "Relatórios"
        ]
      }
    },
    "/analytics/orcamento": {
      "get": {
        "operationId": "AnalyticsController_getOrcamento",
        "parameters": [
          {
            "name": "ano",
            "required": true,
            "in": "query",
            "description": "Ano para análise",
            "schema": {
              "example": 2024,
              "type": "number"
            }
          },
          {
            "name": "mes",
            "required": true,
            "in": "query",
            "description": "Mês para análise",
            "schema": {
              "example": 12,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados para rankings",
            "schema": {
              "example": 5,
              "type": "number"
            }
          },
          {
            "name": "mesesHistorico",
            "required": false,
            "in": "query",
            "description": "Número de meses de histórico para tendências",
            "schema": {
              "example": 12,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics de orçamento retornadas com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsOrcamentoResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Analytics de orçamento e metas",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/categorias": {
      "get": {
        "operationId": "AnalyticsController_getCategorias",
        "parameters": [
          {
            "name": "ano",
            "required": true,
            "in": "query",
            "description": "Ano para análise",
            "schema": {
              "example": 2024,
              "type": "number"
            }
          },
          {
            "name": "mes",
            "required": true,
            "in": "query",
            "description": "Mês para análise",
            "schema": {
              "example": 12,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados para rankings",
            "schema": {
              "example": 5,
              "type": "number"
            }
          },
          {
            "name": "mesesHistorico",
            "required": false,
            "in": "query",
            "description": "Número de meses de histórico para tendências",
            "schema": {
              "example": 12,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics por categoria retornadas com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsCategoriasResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Analytics por categoria",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/tendencias": {
      "get": {
        "operationId": "AnalyticsController_getTendencias",
        "parameters": [
          {
            "name": "ano",
            "required": true,
            "in": "query",
            "description": "Ano para análise",
            "schema": {
              "example": 2024,
              "type": "number"
            }
          },
          {
            "name": "mes",
            "required": true,
            "in": "query",
            "description": "Mês para análise",
            "schema": {
              "example": 12,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados para rankings",
            "schema": {
              "example": 5,
              "type": "number"
            }
          },
          {
            "name": "mesesHistorico",
            "required": false,
            "in": "query",
            "description": "Número de meses de histórico para tendências",
            "schema": {
              "example": 12,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics de tendências retornadas com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsTendenciasResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Analytics de tendências e métricas avançadas",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/quick-stats": {
      "get": {
        "operationId": "AnalyticsController_getQuickStats",
        "parameters": [
          {
            "name": "ano",
            "required": true,
            "in": "query",
            "description": "Ano para análise",
            "schema": {
              "example": 2024,
              "type": "number"
            }
          },
          {
            "name": "mes",
            "required": true,
            "in": "query",
            "description": "Mês para análise",
            "schema": {
              "example": 12,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados para rankings",
            "schema": {
              "example": 5,
              "type": "number"
            }
          },
          {
            "name": "mesesHistorico",
            "required": false,
            "in": "query",
            "description": "Número de meses de histórico para tendências",
            "schema": {
              "example": 12,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quick stats retornadas com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuickStatsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Quick stats para widgets rápidos",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/meios-pagamento": {
      "get": {
        "operationId": "AnalyticsController_getMeiosPagamento",
        "parameters": [
          {
            "name": "ano",
            "required": true,
            "in": "query",
            "description": "Ano para análise",
            "schema": {
              "example": 2024,
              "type": "number"
            }
          },
          {
            "name": "mes",
            "required": true,
            "in": "query",
            "description": "Mês para análise",
            "schema": {
              "example": 12,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados para rankings",
            "schema": {
              "example": 5,
              "type": "number"
            }
          },
          {
            "name": "mesesHistorico",
            "required": false,
            "in": "query",
            "description": "Número de meses de histórico para tendências",
            "schema": {
              "example": 12,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics por meio de pagamento retornadas com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsMeiosPagamentoResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Analytics por meio de pagamento",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/padroes-temporais": {
      "get": {
        "operationId": "AnalyticsController_getPadroesTemporais",
        "parameters": [
          {
            "name": "ano",
            "required": true,
            "in": "query",
            "description": "Ano para análise",
            "schema": {
              "example": 2024,
              "type": "number"
            }
          },
          {
            "name": "mes",
            "required": true,
            "in": "query",
            "description": "Mês para análise",
            "schema": {
              "example": 12,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados para rankings",
            "schema": {
              "example": 5,
              "type": "number"
            }
          },
          {
            "name": "mesesHistorico",
            "required": false,
            "in": "query",
            "description": "Número de meses de histórico para tendências",
            "schema": {
              "example": 12,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics de padrões temporais retornadas com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsPadroesTemporaisResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Analytics de padrões temporais e recorrência",
        "tags": [
          "Analytics"
        ]
      }
    }
  },
  "info": {
    "title": "API de finanças M&J",
    "description": "API de controle financeiro do Júnior e da Vivi",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "access-token": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "in": "header"
      }
    },
    "schemas": {
      "PaginationMeta": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1,
            "description": "Página atual"
          },
          "perPage": {
            "type": "number",
            "example": 10,
            "description": "Limite de itens por página"
          },
          "total": {
            "type": "number",
            "example": 100,
            "description": "Total de itens encontrados"
          },
          "lastPage": {
            "type": "number",
            "example": 10
          }
        },
        "required": [
          "page",
          "perPage",
          "total",
          "lastPage"
        ]
      },
      "Pessoa": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "uuid-gerado"
          },
          "nome": {
            "type": "string",
            "example": "Vivi"
          },
          "email": {
            "type": "string",
            "example": "vivi@email.com"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-07-14T12:34:56Z"
          }
        },
        "required": [
          "id",
          "nome",
          "email",
          "createdAt"
        ]
      },
      "PessoaPaginatedData": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pessoa"
            }
          }
        },
        "required": [
          "meta",
          "rows"
        ]
      },
      "GetPessoasResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/PessoaPaginatedData"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "GetPessoaResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Pessoa"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "CreatePessoaRequest": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da pessoa"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status da pessoa"
          },
          "email": {
            "type": "string",
            "description": "Email da pessoa"
          }
        },
        "required": [
          "nome"
        ]
      },
      "CreatePessoaResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Pessoa"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "EditPessoaRequest": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da pessoa"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status da pessoa"
          },
          "email": {
            "type": "string",
            "description": "Email da pessoa"
          }
        }
      },
      "EditPessoaResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Pessoa"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "DeletePessoaResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Pessoa"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "vivi@email.com"
          },
          "password": {
            "type": "string",
            "example": "123456"
          },
          "nome": {
            "type": "string",
            "example": "Vivi"
          }
        },
        "required": [
          "email",
          "password",
          "nome"
        ]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "conquista.engcomp@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "123456"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "Auth": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "jwt.token"
          },
          "email": {
            "type": "string",
            "example": "vivi@email.com"
          },
          "nome": {
            "type": "string",
            "example": "Vivi"
          }
        },
        "required": [
          "access_token",
          "email",
          "nome"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Auth"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "Categoria": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "uuid-gerado"
          },
          "nome": {
            "type": "string",
            "example": "Alimentação"
          },
          "tipo": {
            "type": "string",
            "enum": [
              "despesa",
              "receita"
            ],
            "example": "despesa"
          },
          "icone": {
            "type": "string",
            "example": "utensils"
          },
          "tetoGasto": {
            "type": "number",
            "example": 3500.5
          },
          "cor": {
            "type": "string",
            "example": "#FF5733"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-07-17T10:20:30.000Z"
          }
        },
        "required": [
          "id",
          "nome",
          "tipo",
          "icone",
          "tetoGasto",
          "cor",
          "createdAt"
        ]
      },
      "CategoriaPaginatedData": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Categoria"
            }
          }
        },
        "required": [
          "meta",
          "rows"
        ]
      },
      "GetCategoriasResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/CategoriaPaginatedData"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "GetCategoriaResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Categoria"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "CreateCategoriaRequest": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da categoria"
          },
          "tipo": {
            "type": "string",
            "enum": [
              "despesa",
              "receita"
            ],
            "description": "Tipo da categoria (despesa ou receita)"
          },
          "icone": {
            "type": "string",
            "description": "Ícone da categoria"
          },
          "tetoGasto": {
            "type": "number",
            "example": 3500.5,
            "description": "Teto de gasto da categoria"
          },
          "cor": {
            "type": "string",
            "description": "Cor da categoria em hexadecimal"
          }
        },
        "required": [
          "nome",
          "tipo"
        ]
      },
      "CreateCategoriaResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Categoria"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "EditCategoriaRequest": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da categoria"
          },
          "tipo": {
            "type": "string",
            "enum": [
              "despesa",
              "receita"
            ],
            "description": "Tipo da categoria (despesa ou receita)"
          },
          "icone": {
            "type": "string",
            "description": "Ícone da categoria"
          },
          "tetoGasto": {
            "type": "number",
            "example": 3500.5,
            "description": "Teto de gasto da categoria"
          },
          "cor": {
            "type": "string",
            "description": "Cor da categoria em hexadecimal"
          }
        }
      },
      "EditCategoriaResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Categoria"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "DeleteCategoriaResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Categoria"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "MeioPagamento": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "uuid-gerado"
          },
          "nome": {
            "type": "string",
            "example": "Cartão crédito xp"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-07-17T10:20:30.000Z"
          }
        },
        "required": [
          "id",
          "nome",
          "createdAt"
        ]
      },
      "MeioPagamentoPaginatedData": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeioPagamento"
            }
          }
        },
        "required": [
          "meta",
          "rows"
        ]
      },
      "GetMeiosPagamentosResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/MeioPagamentoPaginatedData"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "GetMeioPagamentoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/MeioPagamento"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "CreateMeioPagamentoRequest": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome do meio de pagamento"
          }
        },
        "required": [
          "nome"
        ]
      },
      "CreateMeioPagamentoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/MeioPagamento"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "EditMeioPagamentoRequest": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome do meio de pagamento"
          }
        }
      },
      "EditMeioPagamentoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/MeioPagamento"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "DeleteMeioPagamentoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/MeioPagamento"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "EnumOption": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "receita",
            "description": "Valor da opção (para envio ao backend)"
          },
          "label": {
            "type": "string",
            "example": "Receita",
            "description": "Texto amigável para exibição"
          }
        },
        "required": [
          "value",
          "label"
        ]
      },
      "Enums": {
        "type": "object",
        "properties": {
          "tipoCategoria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumOption"
            }
          },
          "tipoTransacao": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumOption"
            }
          },
          "tipoPatrimonio": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumOption"
            }
          },
          "formaPagamento": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumOption"
            }
          }
        },
        "required": [
          "tipoCategoria",
          "tipoTransacao",
          "tipoPatrimonio",
          "formaPagamento"
        ]
      },
      "EnumsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Enums"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "TransacaoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "uuid-gerado"
          },
          "descricao": {
            "type": "string",
            "example": "Salário de Julho"
          },
          "categoriaId": {
            "type": "string",
            "format": "uuid"
          },
          "pessoaId": {
            "type": "string",
            "format": "uuid"
          },
          "valor": {
            "type": "number",
            "example": 3500.5
          },
          "data": {
            "type": "string",
            "example": "2025-07-21T12:00:00Z"
          },
          "observacoes": {
            "type": "string",
            "example": "Pagamento referente ao mês de julho"
          },
          "lembrarMe": {
            "type": "boolean",
            "example": false,
            "description": "Flag para mostrar transação no calendário como lembrete"
          },
          "meioPagamentoId": {
            "type": "string",
            "format": "uuid"
          },
          "formaPagamento": {
            "type": "string",
            "enum": [
              "avista",
              "parcela1x",
              "parcela2x",
              "parcela3x",
              "parcela4x",
              "parcela5x",
              "parcela6x",
              "parcela7x",
              "parcela8x",
              "parcela9x",
              "parcela10x",
              "parcela11x",
              "parcela12x"
            ],
            "example": "parcela3x"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-07-17T10:20:30.000Z"
          },
          "categoria": {
            "$ref": "#/components/schemas/Categoria"
          },
          "pessoa": {
            "$ref": "#/components/schemas/Pessoa"
          },
          "meioPagamento": {
            "$ref": "#/components/schemas/MeioPagamento"
          }
        },
        "required": [
          "id",
          "descricao",
          "categoriaId",
          "pessoaId",
          "valor",
          "data",
          "createdAt",
          "categoria",
          "pessoa",
          "meioPagamento"
        ]
      },
      "TransacoesResume": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "example": "R$ 10"
          }
        },
        "required": [
          "total"
        ]
      },
      "TransacaoPaginatedData": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransacaoResponse"
            }
          },
          "resume": {
            "$ref": "#/components/schemas/TransacoesResume"
          }
        },
        "required": [
          "meta",
          "rows",
          "resume"
        ]
      },
      "GetTransacoesResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/TransacaoPaginatedData"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "CategoriaCalendario": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          },
          "cor": {
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "nome",
          "cor",
          "tipo"
        ]
      },
      "PessoaCalendario": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "nome"
        ]
      },
      "MeioPagamentoCalendario": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "nome"
        ]
      },
      "TransacaoCalendario": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          },
          "valor": {
            "type": "number",
            "description": "Valor em centavos"
          },
          "categoria": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CategoriaCalendario"
              }
            ]
          },
          "pessoa": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/PessoaCalendario"
              }
            ]
          },
          "meioPagamento": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/MeioPagamentoCalendario"
              }
            ]
          },
          "formaPagamento": {
            "type": "string",
            "nullable": true
          },
          "lembrarMe": {
            "type": "boolean",
            "description": "Flag para mostrar transação no calendário como lembrete",
            "example": true
          },
          "tipo": {
            "type": "string",
            "enum": [
              "receita",
              "despesa"
            ]
          }
        },
        "required": [
          "id",
          "descricao",
          "valor",
          "categoria",
          "pessoa",
          "meioPagamento",
          "formaPagamento",
          "lembrarMe",
          "tipo"
        ]
      },
      "DiaCalendario": {
        "type": "object",
        "properties": {
          "dia": {
            "type": "number",
            "description": "Dia do mês (1-31)"
          },
          "data": {
            "type": "string",
            "description": "Data completa (YYYY-MM-DD)",
            "format": "date",
            "example": "2025-09-15"
          },
          "transacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransacaoCalendario"
            }
          },
          "totalDespesas": {
            "type": "number",
            "description": "Total de despesas do dia em centavos"
          },
          "quantidadeTransacoes": {
            "type": "number"
          }
        },
        "required": [
          "dia",
          "data",
          "transacoes",
          "totalDespesas",
          "quantidadeTransacoes"
        ]
      },
      "CalendarioData": {
        "type": "object",
        "properties": {
          "ano": {
            "type": "number"
          },
          "mes": {
            "type": "number"
          },
          "diasDoMes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiaCalendario"
            }
          }
        },
        "required": [
          "ano",
          "mes",
          "diasDoMes"
        ]
      },
      "GetCalendarioResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/CalendarioData"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "Transacao": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "uuid-gerado"
          },
          "descricao": {
            "type": "string",
            "example": "Salário de Julho"
          },
          "categoriaId": {
            "type": "string",
            "format": "uuid"
          },
          "pessoaId": {
            "type": "string",
            "format": "uuid"
          },
          "valor": {
            "type": "number",
            "example": 3500.5
          },
          "data": {
            "type": "string",
            "example": "2025-07-21T12:00:00Z"
          },
          "observacoes": {
            "type": "string",
            "example": "Pagamento referente ao mês de julho"
          },
          "lembrarMe": {
            "type": "boolean",
            "example": false,
            "description": "Flag para mostrar transação no calendário como lembrete"
          },
          "meioPagamentoId": {
            "type": "string",
            "format": "uuid"
          },
          "formaPagamento": {
            "type": "string",
            "enum": [
              "avista",
              "parcela1x",
              "parcela2x",
              "parcela3x",
              "parcela4x",
              "parcela5x",
              "parcela6x",
              "parcela7x",
              "parcela8x",
              "parcela9x",
              "parcela10x",
              "parcela11x",
              "parcela12x"
            ],
            "example": "parcela3x"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-07-17T10:20:30.000Z"
          }
        },
        "required": [
          "id",
          "descricao",
          "categoriaId",
          "pessoaId",
          "valor",
          "data",
          "createdAt"
        ]
      },
      "GetTransacaoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Transacao"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "CreateTransacaoRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "uuid-gerado"
          },
          "descricao": {
            "type": "string",
            "example": "Salário de Julho"
          },
          "categoriaId": {
            "type": "string",
            "format": "uuid"
          },
          "pessoaId": {
            "type": "string",
            "format": "uuid"
          },
          "valor": {
            "type": "number",
            "example": 3500.5
          },
          "data": {
            "type": "string",
            "example": "2025-07-21T12:00:00Z"
          },
          "formaPagamento": {
            "type": "string",
            "enum": [
              "avista",
              "parcela1x",
              "parcela2x",
              "parcela3x",
              "parcela4x",
              "parcela5x",
              "parcela6x",
              "parcela7x",
              "parcela8x",
              "parcela9x",
              "parcela10x",
              "parcela11x",
              "parcela12x"
            ],
            "example": "parcela3x"
          },
          "observacoes": {
            "type": "string",
            "example": "Pagamento referente ao mês de julho"
          },
          "lembrarMe": {
            "type": "boolean",
            "example": false,
            "description": "Flag para mostrar transação no calendário como lembrete"
          },
          "meioPagamentoId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "id",
          "descricao",
          "categoriaId",
          "pessoaId",
          "valor",
          "data"
        ]
      },
      "CreateTransacaoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Transacao"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "EditTransacaoRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "uuid-gerado"
          },
          "descricao": {
            "type": "string",
            "example": "Salário de Julho"
          },
          "categoriaId": {
            "type": "string",
            "format": "uuid"
          },
          "pessoaId": {
            "type": "string",
            "format": "uuid"
          },
          "valor": {
            "type": "number",
            "example": 3500.5
          },
          "data": {
            "type": "string",
            "example": "2025-07-21T12:00:00Z"
          },
          "formaPagamento": {
            "type": "string",
            "enum": [
              "avista",
              "parcela1x",
              "parcela2x",
              "parcela3x",
              "parcela4x",
              "parcela5x",
              "parcela6x",
              "parcela7x",
              "parcela8x",
              "parcela9x",
              "parcela10x",
              "parcela11x",
              "parcela12x"
            ],
            "example": "parcela3x"
          },
          "observacoes": {
            "type": "string",
            "example": "Pagamento referente ao mês de julho"
          },
          "lembrarMe": {
            "type": "boolean",
            "example": false,
            "description": "Flag para mostrar transação no calendário como lembrete"
          },
          "meioPagamentoId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EditTransacaoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Transacao"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "DeleteTransacaoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/Transacao"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "ReceitaPorMes": {
        "type": "object",
        "properties": {
          "mes": {
            "type": "string",
            "example": "2025-01"
          },
          "valor": {
            "type": "number",
            "example": 3500
          }
        },
        "required": [
          "mes",
          "valor"
        ]
      },
      "DespesaPorMes": {
        "type": "object",
        "properties": {
          "mes": {
            "type": "string",
            "example": "2025-01"
          },
          "valor": {
            "type": "number",
            "example": 2500
          }
        },
        "required": [
          "mes",
          "valor"
        ]
      },
      "SaldosPorMes": {
        "type": "object",
        "properties": {
          "mes": {
            "type": "string",
            "example": "2025-01"
          },
          "valor": {
            "type": "number",
            "example": 2500,
            "description": "Saldo final do mês (receitas + saldoMesAnterior - despesas)"
          },
          "saldoMesAnterior": {
            "type": "number",
            "example": 1800,
            "description": "Saldo do mês anterior (base para cálculo acumulativo)"
          },
          "receita": {
            "type": "number",
            "example": 3500,
            "description": "Total de receitas do mês"
          },
          "despesa": {
            "type": "number",
            "example": 2800,
            "description": "Total de despesas do mês"
          },
          "percentualGasto": {
            "type": "number",
            "example": 71.43,
            "description": "Percentual gasto (despesa/receita * 100)"
          },
          "statusFinanceiro": {
            "type": "string",
            "example": "controlado",
            "enum": [
              "controlado",
              "atencao",
              "alerta"
            ],
            "description": "Status financeiro do mês"
          },
          "deltaMesAnterior": {
            "type": "number",
            "example": 150,
            "description": "Diferença para o mês anterior"
          },
          "tendencia": {
            "type": "string",
            "example": "alta",
            "enum": [
              "alta",
              "baixa",
              "estavel"
            ],
            "description": "Tendência em relação ao mês anterior"
          }
        },
        "required": [
          "mes",
          "valor",
          "saldoMesAnterior",
          "receita",
          "despesa"
        ]
      },
      "DespesaPorCategoriaAno": {
        "type": "object",
        "properties": {
          "categoria": {
            "type": "string",
            "example": "Alimentação"
          },
          "valor": {
            "type": "number",
            "example": 2300
          },
          "cor": {
            "type": "string",
            "example": "#FFF"
          },
          "tetoGasto": {
            "type": "number",
            "example": 2300
          }
        },
        "required": [
          "categoria",
          "valor",
          "cor"
        ]
      },
      "DespesaPorCategoriaMesCategoria": {
        "type": "object",
        "properties": {
          "categoria": {
            "type": "string",
            "example": "Alimentação"
          },
          "valor": {
            "type": "number",
            "example": 800
          },
          "cor": {
            "type": "string",
            "example": "#FFF"
          },
          "tetoGasto": {
            "type": "number",
            "example": 2300
          }
        },
        "required": [
          "categoria",
          "valor",
          "cor"
        ]
      },
      "DespesaPorCategoriaMes": {
        "type": "object",
        "properties": {
          "mes": {
            "type": "string",
            "example": "2025-01"
          },
          "categorias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DespesaPorCategoriaMesCategoria"
            }
          }
        },
        "required": [
          "mes",
          "categorias"
        ]
      },
      "GetResumoFinanceiro": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "ID do resumo financeiro"
          },
          "receitasAno": {
            "type": "number",
            "example": 12450.75
          },
          "despesasAno": {
            "type": "number",
            "example": 8930.1
          },
          "saldoAno": {
            "type": "number",
            "example": 3520.65
          },
          "patrimonio": {
            "type": "number",
            "example": 54000
          },
          "receitasMes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReceitaPorMes"
            }
          },
          "despesasMes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DespesaPorMes"
            }
          },
          "saldosMes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaldosPorMes"
            }
          },
          "saldosMesAno": {
            "type": "number",
            "example": 3520.65
          },
          "despesasPorCategoriaAno": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DespesaPorCategoriaAno"
            }
          },
          "despesasPorCategoriaMes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DespesaPorCategoriaMes"
            }
          },
          "atualizadoEm": {
            "type": "string",
            "example": "2025-07-21T16:35:00.000Z",
            "description": "Data da última atualização"
          }
        },
        "required": [
          "id",
          "receitasAno",
          "despesasAno",
          "saldoAno",
          "patrimonio",
          "receitasMes",
          "despesasMes",
          "saldosMes",
          "saldosMesAno",
          "despesasPorCategoriaAno",
          "despesasPorCategoriaMes",
          "atualizadoEm"
        ]
      },
      "GetResumoFinanceiroResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/GetResumoFinanceiro"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "RelatorioTransacoesResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "uuid-gerado"
          },
          "descricao": {
            "type": "string",
            "example": "Salário de Julho"
          },
          "categoriaId": {
            "type": "string",
            "format": "uuid"
          },
          "pessoaId": {
            "type": "string",
            "format": "uuid"
          },
          "valor": {
            "type": "number",
            "example": 3500.5
          },
          "data": {
            "type": "string",
            "example": "2025-07-21T12:00:00Z"
          },
          "observacoes": {
            "type": "string",
            "example": "Pagamento referente ao mês de julho"
          },
          "lembrarMe": {
            "type": "boolean",
            "example": false,
            "description": "Flag para mostrar transação no calendário como lembrete"
          },
          "meioPagamentoId": {
            "type": "string",
            "format": "uuid"
          },
          "formaPagamento": {
            "type": "string",
            "enum": [
              "avista",
              "parcela1x",
              "parcela2x",
              "parcela3x",
              "parcela4x",
              "parcela5x",
              "parcela6x",
              "parcela7x",
              "parcela8x",
              "parcela9x",
              "parcela10x",
              "parcela11x",
              "parcela12x"
            ],
            "example": "parcela3x"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-07-17T10:20:30.000Z"
          },
          "categoria": {
            "$ref": "#/components/schemas/Categoria"
          },
          "pessoa": {
            "$ref": "#/components/schemas/Pessoa"
          },
          "meioPagamento": {
            "$ref": "#/components/schemas/MeioPagamento"
          }
        },
        "required": [
          "id",
          "descricao",
          "categoriaId",
          "pessoaId",
          "valor",
          "data",
          "createdAt",
          "categoria",
          "pessoa",
          "meioPagamento"
        ]
      },
      "RelatorioTrasacoesPaginatedData": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatorioTransacoesResponse"
            }
          },
          "resume": {
            "$ref": "#/components/schemas/TransacoesResume"
          }
        },
        "required": [
          "meta",
          "rows",
          "resume"
        ]
      },
      "GetRelatorioTransacoesResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operação realizada com sucesso"
          },
          "data": {
            "$ref": "#/components/schemas/RelatorioTrasacoesPaginatedData"
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "SaudeFinanceiraDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status da saúde financeira",
            "enum": [
              "saudavel",
              "atencao",
              "critico",
              "excelente"
            ],
            "example": "saudavel"
          },
          "pontuacao": {
            "type": "number",
            "description": "Pontuação de 0-100",
            "example": 75
          },
          "fatores": {
            "type": "object",
            "description": "Fatores que influenciam a pontuação"
          }
        },
        "required": [
          "status",
          "pontuacao",
          "fatores"
        ]
      },
      "OrcamentoGeralDto": {
        "type": "object",
        "properties": {
          "valorOrcado": {
            "type": "number",
            "description": "Valor orçado para o mês",
            "example": 5000
          },
          "valorRealizado": {
            "type": "number",
            "description": "Valor realizado até o momento",
            "example": 3200
          },
          "percentualUtilizado": {
            "type": "number",
            "description": "Percentual utilizado do orçamento",
            "example": 64
          },
          "saldoRestante": {
            "type": "number",
            "description": "Saldo restante",
            "example": 1800
          },
          "diasRestantes": {
            "type": "number",
            "description": "Dias restantes no mês",
            "example": 10
          },
          "mediaGastoDiario": {
            "type": "number",
            "description": "Média de gasto diário atual",
            "example": 106.67
          },
          "mediaPermitidaDiaria": {
            "type": "number",
            "description": "Média permitida diária para não ultrapassar",
            "example": 180
          },
          "projecaoFinal": {
            "type": "number",
            "description": "Projeção final do mês",
            "example": 5200
          }
        },
        "required": [
          "valorOrcado",
          "valorRealizado",
          "percentualUtilizado",
          "saldoRestante",
          "diasRestantes",
          "mediaGastoDiario",
          "mediaPermitidaDiaria",
          "projecaoFinal"
        ]
      },
      "UltimaTransacaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID da transação",
            "example": "uuid-123"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição da transação",
            "example": "Compras no supermercado"
          },
          "valor": {
            "type": "number",
            "description": "Valor da transação",
            "example": 250.5
          },
          "data": {
            "type": "string",
            "description": "Data da transação",
            "example": "2024-12-15T10:30:00Z"
          }
        },
        "required": [
          "id",
          "descricao",
          "valor",
          "data"
        ]
      },
      "OrcamentoCategoriaDto": {
        "type": "object",
        "properties": {
          "categoriaId": {
            "type": "string",
            "description": "ID da categoria",
            "example": "uuid-cat-123"
          },
          "categoriaNome": {
            "type": "string",
            "description": "Nome da categoria",
            "example": "Alimentação"
          },
          "categoriaIcone": {
            "type": "string",
            "description": "Ícone da categoria",
            "example": "utensils"
          },
          "categoriaCor": {
            "type": "string",
            "description": "Cor da categoria",
            "example": "#ff6b6b"
          },
          "valorOrcado": {
            "type": "number",
            "description": "Valor orçado (baseado no teto)",
            "example": 1500
          },
          "valorRealizado": {
            "type": "number",
            "description": "Valor realizado",
            "example": 1200
          },
          "percentualUtilizado": {
            "type": "number",
            "description": "Percentual utilizado",
            "example": 80
          },
          "status": {
            "type": "string",
            "description": "Status do orçamento",
            "enum": [
              "dentro",
              "atencao",
              "ultrapassado"
            ],
            "example": "dentro"
          },
          "saldoRestante": {
            "type": "number",
            "description": "Saldo restante",
            "example": 300
          },
          "projecaoMes": {
            "type": "number",
            "description": "Projeção para o final do mês",
            "example": 1450
          },
          "ultimasTransacoes": {
            "description": "Últimas transações da categoria",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UltimaTransacaoDto"
            }
          }
        },
        "required": [
          "categoriaId",
          "categoriaNome",
          "categoriaIcone",
          "categoriaCor",
          "valorOrcado",
          "valorRealizado",
          "percentualUtilizado",
          "status",
          "saldoRestante",
          "projecaoMes",
          "ultimasTransacoes"
        ]
      },
      "AlertaOrcamentoDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "type": "string",
            "description": "Tipo do alerta",
            "enum": [
              "info",
              "warning",
              "error",
              "success"
            ],
            "example": "warning"
          },
          "categoria": {
            "type": "string",
            "description": "Categoria relacionada",
            "example": "Alimentação"
          },
          "titulo": {
            "type": "string",
            "description": "Título do alerta",
            "example": "Meta próxima do limite"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição detalhada",
            "example": "Você já gastou 80% do orçamento em Alimentação"
          },
          "valorEnvolvido": {
            "type": "number",
            "description": "Valor envolvido no alerta",
            "example": 1200
          },
          "acao": {
            "type": "string",
            "description": "Ação recomendada",
            "example": "Considere reduzir gastos nesta categoria"
          }
        },
        "required": [
          "tipo",
          "titulo",
          "descricao"
        ]
      },
      "AnalyticsOrcamentoDataDto": {
        "type": "object",
        "properties": {
          "saudeFinanceira": {
            "description": "Saúde financeira geral",
            "allOf": [
              {
                "$ref": "#/components/schemas/SaudeFinanceiraDto"
              }
            ]
          },
          "orcamentoGeral": {
            "description": "Orçamento geral do mês",
            "allOf": [
              {
                "$ref": "#/components/schemas/OrcamentoGeralDto"
              }
            ]
          },
          "orcamentoCategorias": {
            "description": "Orçamento por categoria",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrcamentoCategoriaDto"
            }
          },
          "alertas": {
            "description": "Alertas de orçamento",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertaOrcamentoDto"
            }
          }
        },
        "required": [
          "saudeFinanceira",
          "orcamentoGeral",
          "orcamentoCategorias",
          "alertas"
        ]
      },
      "GetAnalyticsOrcamentoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem de resposta",
            "example": "Analytics de orçamento retornadas com sucesso"
          },
          "data": {
            "description": "Dados de analytics de orçamento",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnalyticsOrcamentoDataDto"
              }
            ]
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "MesAnteriorDto": {
        "type": "object",
        "properties": {
          "valorTotal": {
            "type": "number",
            "description": "Valor total do mês anterior",
            "example": 1200.5
          },
          "variacao": {
            "type": "number",
            "description": "Variação percentual em relação ao mês anterior",
            "example": 15.5
          }
        },
        "required": [
          "valorTotal",
          "variacao"
        ]
      },
      "MaiorTransacaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID da transação",
            "example": "uuid-123"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição da transação",
            "example": "Compra eletrônicos"
          },
          "valor": {
            "type": "number",
            "description": "Valor da transação",
            "example": 1500
          },
          "data": {
            "type": "string",
            "description": "Data da transação",
            "example": "2024-12-15T10:30:00Z"
          }
        },
        "required": [
          "id",
          "descricao",
          "valor",
          "data"
        ]
      },
      "CategoriaAnalyticsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID da categoria",
            "example": "uuid-cat-123"
          },
          "nome": {
            "type": "string",
            "description": "Nome da categoria",
            "example": "Alimentação"
          },
          "tipo": {
            "type": "string",
            "description": "Tipo da categoria",
            "enum": [
              "receita",
              "despesa"
            ],
            "example": "despesa"
          },
          "icone": {
            "type": "string",
            "description": "Ícone da categoria",
            "example": "utensils"
          },
          "cor": {
            "type": "string",
            "description": "Cor da categoria",
            "example": "#ff6b6b"
          },
          "valorTotal": {
            "type": "number",
            "description": "Valor total movimentado na categoria",
            "example": 1350.75
          },
          "numeroTransacoes": {
            "type": "number",
            "description": "Número de transações",
            "example": 25
          },
          "percentualDoTotal": {
            "type": "number",
            "description": "Percentual do total geral",
            "example": 27.5
          },
          "tetoGasto": {
            "type": "number",
            "description": "Teto de gasto configurado",
            "example": 1500
          },
          "percentualTeto": {
            "type": "number",
            "description": "Percentual do teto utilizado",
            "example": 90.05
          },
          "tetoUltrapassado": {
            "type": "boolean",
            "description": "Se o teto foi ultrapassado",
            "example": false
          },
          "mesAnterior": {
            "description": "Dados do mês anterior",
            "allOf": [
              {
                "$ref": "#/components/schemas/MesAnteriorDto"
              }
            ]
          },
          "maiorTransacao": {
            "description": "Maior transação da categoria",
            "allOf": [
              {
                "$ref": "#/components/schemas/MaiorTransacaoDto"
              }
            ]
          }
        },
        "required": [
          "id",
          "nome",
          "tipo",
          "icone",
          "cor",
          "valorTotal",
          "numeroTransacoes",
          "percentualDoTotal",
          "tetoGasto",
          "percentualTeto",
          "tetoUltrapassado",
          "mesAnterior",
          "maiorTransacao"
        ]
      },
      "TotalMesAnteriorDto": {
        "type": "object",
        "properties": {
          "totalGeral": {
            "type": "number",
            "description": "Total geral do mês anterior",
            "example": 4500.25
          },
          "variacao": {
            "type": "number",
            "description": "Variação percentual",
            "example": 8.5
          }
        },
        "required": [
          "totalGeral",
          "variacao"
        ]
      },
      "AnalyticsCategoriasDataDto": {
        "type": "object",
        "properties": {
          "categorias": {
            "description": "Lista de categorias com analytics",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoriaAnalyticsDto"
            }
          },
          "totalGeral": {
            "type": "number",
            "description": "Total geral do período",
            "example": 4900.5
          },
          "mesAnterior": {
            "description": "Comparação com mês anterior",
            "allOf": [
              {
                "$ref": "#/components/schemas/TotalMesAnteriorDto"
              }
            ]
          }
        },
        "required": [
          "categorias",
          "totalGeral",
          "mesAnterior"
        ]
      },
      "GetAnalyticsCategoriasResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem de resposta",
            "example": "Analytics por categoria retornadas com sucesso"
          },
          "data": {
            "description": "Dados de analytics por categoria",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnalyticsCategoriasDataDto"
              }
            ]
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "EvolucaoMensalDto": {
        "type": "object",
        "properties": {
          "ano": {
            "type": "number",
            "description": "Ano",
            "example": 2024
          },
          "mes": {
            "type": "number",
            "description": "Mês",
            "example": 12
          },
          "receitas": {
            "type": "number",
            "description": "Total de receitas",
            "example": 5000
          },
          "despesas": {
            "type": "number",
            "description": "Total de despesas",
            "example": 3500.5
          },
          "saldo": {
            "type": "number",
            "description": "Saldo do mês",
            "example": 1499.5
          },
          "numeroTransacoes": {
            "type": "number",
            "description": "Número de transações",
            "example": 45
          }
        },
        "required": [
          "ano",
          "mes",
          "receitas",
          "despesas",
          "saldo",
          "numeroTransacoes"
        ]
      },
      "MesAtualDto": {
        "type": "object",
        "properties": {
          "diaAtual": {
            "type": "number",
            "description": "Dia atual do mês",
            "example": 15
          },
          "totalDias": {
            "type": "number",
            "description": "Total de dias no mês",
            "example": 31
          },
          "percentualMesDecorrido": {
            "type": "number",
            "description": "Percentual do mês decorrido",
            "example": 48.4
          }
        },
        "required": [
          "diaAtual",
          "totalDias",
          "percentualMesDecorrido"
        ]
      },
      "ValoresProjecaoDto": {
        "type": "object",
        "properties": {
          "receitasRealizadas": {
            "type": "number",
            "description": "Receitas realizadas até agora",
            "example": 2400
          },
          "despesasRealizadas": {
            "type": "number",
            "description": "Despesas realizadas até agora",
            "example": 1750.25
          },
          "receitasProjetadas": {
            "type": "number",
            "description": "Projeção de receitas para o mês",
            "example": 4950
          },
          "despesasProjetadas": {
            "type": "number",
            "description": "Projeção de despesas para o mês",
            "example": 3617.85
          },
          "saldoProjetado": {
            "type": "number",
            "description": "Saldo projetado para o mês",
            "example": 1332.15
          }
        },
        "required": [
          "receitasRealizadas",
          "despesasRealizadas",
          "receitasProjetadas",
          "despesasProjetadas",
          "saldoProjetado"
        ]
      },
      "ProjecaoMesDto": {
        "type": "object",
        "properties": {
          "mesAtual": {
            "description": "Dados do mês atual",
            "allOf": [
              {
                "$ref": "#/components/schemas/MesAtualDto"
              }
            ]
          },
          "valores": {
            "description": "Valores e projeções",
            "allOf": [
              {
                "$ref": "#/components/schemas/ValoresProjecaoDto"
              }
            ]
          }
        },
        "required": [
          "mesAtual",
          "valores"
        ]
      },
      "MaiorGastoMesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID da transação",
            "example": "uuid-123"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição da transação",
            "example": "Pagamento cartão de crédito"
          },
          "valor": {
            "type": "number",
            "description": "Valor da transação",
            "example": 2500
          },
          "data": {
            "type": "string",
            "description": "Data da transação",
            "example": "2024-12-10T14:30:00Z"
          },
          "categoria": {
            "type": "string",
            "description": "Categoria da transação",
            "example": "Cartão de Crédito"
          }
        },
        "required": [
          "id",
          "descricao",
          "valor",
          "data",
          "categoria"
        ]
      },
      "DiasSemGastosDto": {
        "type": "object",
        "properties": {
          "ultimoPeriodo": {
            "type": "number",
            "description": "Dias sem gastos no período atual",
            "example": 3
          },
          "recordeAno": {
            "type": "number",
            "description": "Recorde de dias sem gastos no ano",
            "example": 7
          }
        },
        "required": [
          "ultimoPeriodo",
          "recordeAno"
        ]
      },
      "MetricasAvancadasDto": {
        "type": "object",
        "properties": {
          "mediaDespesasDiarias": {
            "type": "number",
            "description": "Média de despesas diárias",
            "example": 116.68
          },
          "mediaMensalUltimos6Meses": {
            "type": "number",
            "description": "Média mensal dos últimos 6 meses",
            "example": 3650.25
          },
          "variacao6Meses": {
            "type": "number",
            "description": "Variação percentual dos últimos 6 meses",
            "example": -4.2
          },
          "maiorGastoMes": {
            "description": "Maior gasto do mês",
            "allOf": [
              {
                "$ref": "#/components/schemas/MaiorGastoMesDto"
              }
            ]
          },
          "diasSemGastos": {
            "description": "Estatísticas de dias sem gastos",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiasSemGastosDto"
              }
            ]
          }
        },
        "required": [
          "mediaDespesasDiarias",
          "mediaMensalUltimos6Meses",
          "variacao6Meses",
          "maiorGastoMes",
          "diasSemGastos"
        ]
      },
      "InsightFinanceiroDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "type": "string",
            "description": "Tipo do insight",
            "enum": [
              "positivo",
              "neutro",
              "atencao",
              "critico"
            ],
            "example": "positivo"
          },
          "titulo": {
            "type": "string",
            "description": "Título do insight",
            "example": "Gastos controlados em Dezembro"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição detalhada",
            "example": "Você está gastando 15% menos que a média dos últimos 6 meses"
          },
          "valor": {
            "type": "number",
            "description": "Valor relacionado ao insight",
            "example": 547.5
          },
          "acao": {
            "type": "string",
            "description": "Ação recomendada",
            "example": "Continue mantendo esse padrão de gastos"
          }
        },
        "required": [
          "tipo",
          "titulo",
          "descricao"
        ]
      },
      "AnalyticsTendenciasDataDto": {
        "type": "object",
        "properties": {
          "evolucaoMensal": {
            "description": "Evolução mensal histórica",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvolucaoMensalDto"
            }
          },
          "projecaoMesAtual": {
            "description": "Projeção para o mês atual",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjecaoMesDto"
              }
            ]
          },
          "metricas": {
            "description": "Métricas avançadas",
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricasAvancadasDto"
              }
            ]
          },
          "insights": {
            "description": "Insights financeiros automatizados",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsightFinanceiroDto"
            }
          }
        },
        "required": [
          "evolucaoMensal",
          "projecaoMesAtual",
          "metricas",
          "insights"
        ]
      },
      "GetAnalyticsTendenciasResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem de resposta",
            "example": "Analytics de tendências retornadas com sucesso"
          },
          "data": {
            "description": "Dados de analytics de tendências",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnalyticsTendenciasDataDto"
              }
            ]
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "VariacaoQuickStatDto": {
        "type": "object",
        "properties": {
          "valor": {
            "type": "number",
            "description": "Valor da variação",
            "example": 15.5
          },
          "tipo": {
            "type": "string",
            "description": "Tipo da variação",
            "enum": [
              "positiva",
              "negativa",
              "neutra"
            ],
            "example": "positiva"
          },
          "periodo": {
            "type": "string",
            "description": "Período de comparação",
            "example": "vs. mês anterior"
          }
        },
        "required": [
          "valor",
          "tipo",
          "periodo"
        ]
      },
      "QuickStatDto": {
        "type": "object",
        "properties": {
          "titulo": {
            "type": "string",
            "description": "Título do stat",
            "example": "Gasto da Semana"
          },
          "valor": {
            "description": "Valor principal",
            "oneOf": [
              {
                "type": "number",
                "example": 450.75
              },
              {
                "type": "string",
                "example": "R$ 450,75"
              }
            ]
          },
          "subtitulo": {
            "type": "string",
            "description": "Subtítulo ou informação adicional",
            "example": "Últimos 7 dias"
          },
          "variacao": {
            "description": "Variação em relação ao período anterior",
            "allOf": [
              {
                "$ref": "#/components/schemas/VariacaoQuickStatDto"
              }
            ]
          },
          "icone": {
            "type": "string",
            "description": "Ícone para o stat",
            "example": "calendar-week"
          },
          "cor": {
            "type": "string",
            "description": "Cor para destacar o stat",
            "example": "#28a745"
          }
        },
        "required": [
          "titulo",
          "valor"
        ]
      },
      "QuickStatsDataDto": {
        "type": "object",
        "properties": {
          "gastoSemana": {
            "description": "Gasto da semana atual",
            "allOf": [
              {
                "$ref": "#/components/schemas/QuickStatDto"
              }
            ]
          },
          "economiaMes": {
            "description": "Economia do mês",
            "allOf": [
              {
                "$ref": "#/components/schemas/QuickStatDto"
              }
            ]
          },
          "maiorCategoria": {
            "description": "Maior categoria do mês",
            "allOf": [
              {
                "$ref": "#/components/schemas/QuickStatDto"
              }
            ]
          },
          "diasSemGastos": {
            "description": "Dias sem gastos",
            "allOf": [
              {
                "$ref": "#/components/schemas/QuickStatDto"
              }
            ]
          },
          "transacaoMaior": {
            "description": "Maior transação do mês",
            "allOf": [
              {
                "$ref": "#/components/schemas/QuickStatDto"
              }
            ]
          },
          "comparativoAno": {
            "description": "Comparativo com o ano",
            "allOf": [
              {
                "$ref": "#/components/schemas/QuickStatDto"
              }
            ]
          }
        },
        "required": [
          "gastoSemana",
          "economiaMes",
          "maiorCategoria",
          "diasSemGastos",
          "transacaoMaior",
          "comparativoAno"
        ]
      },
      "GetQuickStatsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem de resposta",
            "example": "Quick stats retornadas com sucesso"
          },
          "data": {
            "description": "Dados dos quick stats",
            "allOf": [
              {
                "$ref": "#/components/schemas/QuickStatsDataDto"
              }
            ]
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "MeioPagamentoAnalyticsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do meio de pagamento",
            "example": "uuid-meio-123"
          },
          "nome": {
            "type": "string",
            "description": "Nome do meio de pagamento",
            "example": "Cartão de Crédito"
          },
          "valorTotal": {
            "type": "number",
            "description": "Valor total movimentado",
            "example": 2500.75
          },
          "numeroTransacoes": {
            "type": "number",
            "description": "Número de transações",
            "example": 18
          },
          "percentualDoTotal": {
            "type": "number",
            "description": "Percentual do total",
            "example": 45.8
          },
          "valorMedio": {
            "type": "number",
            "description": "Valor médio por transação",
            "example": 138.93
          }
        },
        "required": [
          "id",
          "nome",
          "valorTotal",
          "numeroTransacoes",
          "percentualDoTotal",
          "valorMedio"
        ]
      },
      "FormaPagamentoAvistaDto": {
        "type": "object",
        "properties": {
          "numeroTransacoes": {
            "type": "number",
            "description": "Número de transações à vista",
            "example": 25
          },
          "valorTotal": {
            "type": "number",
            "description": "Valor total à vista",
            "example": 1850.5
          },
          "percentual": {
            "type": "number",
            "description": "Percentual das transações à vista",
            "example": 62.5
          }
        },
        "required": [
          "numeroTransacoes",
          "valorTotal",
          "percentual"
        ]
      },
      "FormaPagamentoParceladoDto": {
        "type": "object",
        "properties": {
          "numeroTransacoes": {
            "type": "number",
            "description": "Número de transações parceladas",
            "example": 15
          },
          "valorTotal": {
            "type": "number",
            "description": "Valor total parcelado",
            "example": 3200.25
          },
          "percentual": {
            "type": "number",
            "description": "Percentual das transações parceladas",
            "example": 37.5
          },
          "mediaParcelamento": {
            "type": "number",
            "description": "Média de parcelamento",
            "example": 4.2
          }
        },
        "required": [
          "numeroTransacoes",
          "valorTotal",
          "percentual",
          "mediaParcelamento"
        ]
      },
      "DistribuicaoParcelasDto": {
        "type": "object",
        "properties": {
          "parcela1x": {
            "type": "number",
            "description": "Transações em 1x",
            "example": 25
          },
          "parcela2x": {
            "type": "number",
            "description": "Transações em 2x",
            "example": 8
          },
          "parcela3x": {
            "type": "number",
            "description": "Transações em 3x",
            "example": 5
          },
          "parcela4x": {
            "type": "number",
            "description": "Transações em 4x",
            "example": 3
          },
          "parcela5x": {
            "type": "number",
            "description": "Transações em 5x",
            "example": 2
          },
          "parcela6x": {
            "type": "number",
            "description": "Transações em 6x",
            "example": 4
          },
          "parcela7x": {
            "type": "number",
            "description": "Transações em 7x",
            "example": 1
          },
          "parcela8x": {
            "type": "number",
            "description": "Transações em 8x",
            "example": 0
          },
          "parcela9x": {
            "type": "number",
            "description": "Transações em 9x",
            "example": 1
          },
          "parcela10x": {
            "type": "number",
            "description": "Transações em 10x",
            "example": 2
          },
          "parcela11x": {
            "type": "number",
            "description": "Transações em 11x",
            "example": 0
          },
          "parcela12x": {
            "type": "number",
            "description": "Transações em 12x",
            "example": 3
          }
        },
        "required": [
          "parcela1x",
          "parcela2x",
          "parcela3x",
          "parcela4x",
          "parcela5x",
          "parcela6x",
          "parcela7x",
          "parcela8x",
          "parcela9x",
          "parcela10x",
          "parcela11x",
          "parcela12x"
        ]
      },
      "FormaPagamentoAnalyticsDto": {
        "type": "object",
        "properties": {
          "avista": {
            "description": "Dados de transações à vista",
            "allOf": [
              {
                "$ref": "#/components/schemas/FormaPagamentoAvistaDto"
              }
            ]
          },
          "parcelado": {
            "description": "Dados de transações parceladas",
            "allOf": [
              {
                "$ref": "#/components/schemas/FormaPagamentoParceladoDto"
              }
            ]
          },
          "distribuicaoParcelas": {
            "description": "Distribuição por número de parcelas",
            "allOf": [
              {
                "$ref": "#/components/schemas/DistribuicaoParcelasDto"
              }
            ]
          }
        },
        "required": [
          "avista",
          "parcelado",
          "distribuicaoParcelas"
        ]
      },
      "ResumoMeiosPagamentoDto": {
        "type": "object",
        "properties": {
          "totalTransacoes": {
            "type": "number",
            "description": "Total de transações",
            "example": 40
          },
          "valorMedio": {
            "type": "number",
            "description": "Valor médio das transações",
            "example": 137.51
          },
          "meioMaisUsado": {
            "type": "string",
            "description": "Meio de pagamento mais usado",
            "example": "Cartão de Crédito"
          }
        },
        "required": [
          "totalTransacoes",
          "valorMedio",
          "meioMaisUsado"
        ]
      },
      "AnalyticsMeiosPagamentoDataDto": {
        "type": "object",
        "properties": {
          "meiosPagamento": {
            "description": "Analytics por meio de pagamento",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeioPagamentoAnalyticsDto"
            }
          },
          "formasPagamento": {
            "description": "Analytics por forma de pagamento",
            "allOf": [
              {
                "$ref": "#/components/schemas/FormaPagamentoAnalyticsDto"
              }
            ]
          },
          "resumo": {
            "description": "Resumo geral",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumoMeiosPagamentoDto"
              }
            ]
          }
        },
        "required": [
          "meiosPagamento",
          "formasPagamento",
          "resumo"
        ]
      },
      "GetAnalyticsMeiosPagamentoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem de resposta",
            "example": "Analytics por meio de pagamento retornadas com sucesso"
          },
          "data": {
            "description": "Dados de analytics por meio de pagamento",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnalyticsMeiosPagamentoDataDto"
              }
            ]
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "PadraoDiarioDto": {
        "type": "object",
        "properties": {
          "diaSemana": {
            "type": "string",
            "description": "Dia da semana",
            "example": "segunda"
          },
          "numeroTransacoes": {
            "type": "number",
            "description": "Número de transações",
            "example": 8
          },
          "valorMedio": {
            "type": "number",
            "description": "Valor médio das transações",
            "example": 125.75
          },
          "valorTotal": {
            "type": "number",
            "description": "Valor total do dia",
            "example": 1006
          },
          "horarioPreferido": {
            "type": "string",
            "description": "Horário preferido",
            "enum": [
              "manha",
              "tarde",
              "noite"
            ],
            "example": "tarde"
          }
        },
        "required": [
          "diaSemana",
          "numeroTransacoes",
          "valorMedio",
          "valorTotal",
          "horarioPreferido"
        ]
      },
      "TransacaoRecorrenteDto": {
        "type": "object",
        "properties": {
          "padrao": {
            "type": "string",
            "description": "Padrão identificado",
            "example": "Supermercado Extra"
          },
          "frequencia": {
            "type": "string",
            "description": "Frequência identificada",
            "enum": [
              "semanal",
              "quinzenal",
              "mensal"
            ],
            "example": "semanal"
          },
          "ultimaOcorrencia": {
            "type": "string",
            "description": "Última ocorrência",
            "example": "2024-12-15T14:30:00Z"
          },
          "proximaPrevisao": {
            "type": "string",
            "description": "Próxima previsão",
            "example": "2024-12-22T14:30:00Z"
          },
          "valorMedio": {
            "type": "number",
            "description": "Valor médio das ocorrências",
            "example": 245.5
          },
          "categoria": {
            "type": "string",
            "description": "Categoria mais comum",
            "example": "Alimentação"
          },
          "confianca": {
            "type": "number",
            "description": "Confiança da identificação (0-100%)",
            "example": 85
          }
        },
        "required": [
          "padrao",
          "frequencia",
          "ultimaOcorrencia",
          "proximaPrevisao",
          "valorMedio",
          "categoria",
          "confianca"
        ]
      },
      "LembreteTransacaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do lembrete",
            "example": "uuid-lembrete-123"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição do lembrete",
            "example": "Pagamento fatura cartão"
          },
          "data": {
            "type": "string",
            "description": "Data prevista",
            "example": "2024-12-25T00:00:00Z"
          },
          "valor": {
            "type": "number",
            "description": "Valor previsto",
            "example": 850
          },
          "categoria": {
            "type": "string",
            "description": "Categoria relacionada",
            "example": "Cartão de Crédito"
          },
          "status": {
            "type": "string",
            "description": "Status do lembrete",
            "enum": [
              "pendente",
              "realizado",
              "atrasado"
            ],
            "example": "pendente"
          }
        },
        "required": [
          "id",
          "descricao",
          "data",
          "valor",
          "categoria",
          "status"
        ]
      },
      "ParcelaAbertaDto": {
        "type": "object",
        "properties": {
          "transacaoOriginalId": {
            "type": "string",
            "description": "ID da transação original",
            "example": "uuid-transacao-123"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição da compra",
            "example": "Notebook Dell"
          },
          "valorTotal": {
            "type": "number",
            "description": "Valor total da compra",
            "example": 3000
          },
          "formaPagamento": {
            "type": "string",
            "description": "Forma de pagamento",
            "example": "parcela12x"
          },
          "parcelaAtual": {
            "type": "number",
            "description": "Parcela atual",
            "example": 3
          },
          "totalParcelas": {
            "type": "number",
            "description": "Total de parcelas",
            "example": 12
          },
          "valorParcela": {
            "type": "number",
            "description": "Valor de cada parcela",
            "example": 250
          },
          "proximoVencimento": {
            "type": "string",
            "description": "Próximo vencimento",
            "example": "2024-01-15T00:00:00Z"
          },
          "parcelasRestantes": {
            "type": "number",
            "description": "Parcelas restantes",
            "example": 9
          },
          "valorRestante": {
            "type": "number",
            "description": "Valor restante total",
            "example": 2250
          }
        },
        "required": [
          "transacaoOriginalId",
          "descricao",
          "valorTotal",
          "formaPagamento",
          "parcelaAtual",
          "totalParcelas",
          "valorParcela",
          "parcelasRestantes",
          "valorRestante"
        ]
      },
      "AnalyticsPadroesTemporaisDataDto": {
        "type": "object",
        "properties": {
          "padroesDiarios": {
            "description": "Padrões de gastos por dia da semana",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PadraoDiarioDto"
            }
          },
          "transacoesRecorrentes": {
            "description": "Transações recorrentes identificadas",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransacaoRecorrenteDto"
            }
          },
          "lembretes": {
            "description": "Lembretes de transações",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LembreteTransacaoDto"
            }
          },
          "parcelasAbertas": {
            "description": "Parcelas em aberto",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParcelaAbertaDto"
            }
          }
        },
        "required": [
          "padroesDiarios",
          "transacoesRecorrentes",
          "lembretes",
          "parcelasAbertas"
        ]
      },
      "GetAnalyticsPadroesTemporaisResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem de resposta",
            "example": "Analytics de padrões temporais retornadas com sucesso"
          },
          "data": {
            "description": "Dados de analytics de padrões temporais",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnalyticsPadroesTemporaisDataDto"
              }
            ]
          }
        },
        "required": [
          "message",
          "data"
        ]
      }
    }
  }
}